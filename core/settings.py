"""
Django settings for core project.

Generated by 'django-admin startproject' using Django 5.0b1.

For more information on this file, see
https://docs.djangoproject.com/en/dev/topics/settings/

For the full list of settings and their values, see
https://docs.djangoproject.com/en/dev/ref/settings/
"""
from pathlib import Path
from decouple import config, Csv
from dj_database_url import parse as db_url
from django.conf import settings
from .helpers import cast_tuple



BASE_DIR = Path(__file__).resolve().parent.parent

ADMINS = config('ADMINS', default=None, cast=cast_tuple )
DEBUG = config('DEBUG', default=False, cast=bool)
RUNING = config('RUNING', default='production')
SECRET_KEY = config('SECRET_KEY')

SESSION_COOKIE_NAME = config('SESSION_COOKIE_NAME', default='sessionid')
SESSION_COOKIE_NAME = config('SESSION_CACHE_ALIAS', default='default')
SESSION_COOKIE_SECURE = config('SESSION_COOKIE_SECURE', default=False, cast=bool)
SESSION_COOKIE_SECURE = config('SESSION_COOKIE_HTTPONLY', default=True, cast=bool)
SESSION_COOKIE_SECURE = config('SESSION_COOKIE_DOMAIN', default=None)

ALLOWED_HOSTS = config('ALLOWED_HOSTS', default=None, cast=Csv())
CSRF_TRUSTED_ORIGINS = config('CSRF_TRUSTED_ORIGINS', default=None, cast=Csv())
CSRF_COOKIE_SECURE = config('CSRF_COOKIE_SECURE', default=False, cast=bool)
INTERNAL_IPS = config('INTERNAL_IPS', default=None, cast=Csv())


INSTALLED_APPS = [
    'django.contrib.admin',
    'django.contrib.auth',
    'django.contrib.contenttypes',
    'django.contrib.sessions',
    'django.contrib.messages',
    
    'page',
    'vault',
    'notes',
    'django.contrib.staticfiles',
]

MIDDLEWARE = [
    'django.middleware.security.SecurityMiddleware',
    'django.contrib.sessions.middleware.SessionMiddleware',
    'django.middleware.common.CommonMiddleware',
    'django.middleware.csrf.CsrfViewMiddleware',
    'django.contrib.auth.middleware.AuthenticationMiddleware',
    'django.contrib.messages.middleware.MessageMiddleware',
    'django.middleware.clickjacking.XFrameOptionsMiddleware',
]



ROOT_URLCONF = 'core.urls'

TEMPLATES = [
    {
        'BACKEND': 'django.template.backends.django.DjangoTemplates',
        'DIRS': [
            BASE_DIR / 'templates'
        ],
        'APP_DIRS': True,
        'OPTIONS': {
            'context_processors': [
                'django.template.context_processors.debug',
                'django.template.context_processors.request',
                'page.context_processors.page_components',
                'django.contrib.auth.context_processors.auth',
                'django.contrib.messages.context_processors.messages',
            ],
        },
    },
]





WSGI_APPLICATION = 'core.wsgi.application'


# Database
# https://docs.djangoproject.com/en/dev/ref/settings/#databases



# Password validation
# https://docs.djangoproject.com/en/dev/ref/settings/#auth-password-validators

AUTH_PASSWORD_VALIDATORS = [
    {
        'NAME': 'django.contrib.auth.password_validation.UserAttributeSimilarityValidator',
    },
    {
        'NAME': 'django.contrib.auth.password_validation.MinimumLengthValidator',
    },
    {
        'NAME': 'django.contrib.auth.password_validation.CommonPasswordValidator',
    },
    {
        'NAME': 'django.contrib.auth.password_validation.NumericPasswordValidator',
    },
]


# Internationalization
# https://docs.djangoproject.com/en/dev/topics/i18n/


TIME_ZONE = 'UTC'

USE_I18N = True

USE_TZ = True


# Static files (CSS, JavaScript, Images)
# https://docs.djangoproject.com/en/dev/howto/static-files/

STATICFILES_FINDERS = (
    'django.contrib.staticfiles.finders.FileSystemFinder',
    'django.contrib.staticfiles.finders.AppDirectoriesFinder',
    # other finders..
    # 'compressor.finders.CompressorFinder',
)
# STATIC_ROOT = BASE_DIR / 'assets' / 'dist'
# STATICFILES_DIRS = [
#     BASE_DIR / 'assets' / 'src',
# ]
if DEBUG:
    STATIC_ROOT = BASE_DIR / 'assets' / 'fakepath'
    STATICFILES_DIRS = [
        # BASE_DIR / 'assets' / 'src',
        BASE_DIR / 'assets' / 'dist',
    ]


STATIC_URL = '/static/'


# Default primary key field type
# https://docs.djangoproject.com/en/dev/ref/settings/#default-auto-field

DEFAULT_AUTO_FIELD = 'django.db.models.BigAutoField'


LANGUAGES = [
    ['lv','LV'],
    ['en','EN'],
]
LANGUAGE_CODE = 'en'


AUTH_USER_MODEL = "page.User"

# norāda vai rādīt vairākas valodas vienam laukam adminā
MULTILANG_ADMIN = False 



# obfuscate ids
# https://dev.to/ndrbrt/obfuscate-django-models-ids-by-encoding-them-as-non-sequential-non-predictable-strings-4pa


HASHIDS = {
    'salt': config('HASHIDS_SALT'),
    'min_length': 11
}

# DEBUG	- Detailed information, typically useful for diagnosing problems during development.
# INFO - General information about the application's operation, such as confirmation that things are working as expected.
# WARNING - Indicates a potential problem or unexpected situation that doesn't stop the application but may require attention.
# ERROR	- A serious problem that has caused some part of the application to fail.
# CRITICAL - A very serious error indicating that the application may not be able to continue running.

LOGGING = {
    'version': 1,
    'disable_existing_loggers': False,  # Keep existing loggers enabled
    'formatters': {
        'verbose': {
            'format': '{levelname} {asctime} {module} {message}',
            'style': '{',
        },
        'simple': {
            'format': '{levelname} {message}',
            'style': '{',
        },
    },
    'handlers': {
        'console': {
            'level': config('LOG_LEVEL_CONSOLE', default='INFO'),  # Console log level from .env
            'class': 'logging.StreamHandler',
            'formatter': 'verbose',  # Use the 'verbose' formatter
        },
        'error_file': {
            'level': config('LOG_LEVEL_ERROR_FILE', default='ERROR'),  # Error log level from .env
            'class': 'logging.FileHandler',
            'filename': config('ERROR_LOG_FILE', default='django_error.log'),  # Path from .env
            'formatter': 'verbose',
        },
        'general_file': {
            'level': config('LOG_LEVEL_GENERAL_FILE', default='INFO'),  # General log level from .env
            'class': 'logging.FileHandler',
            'filename': config('GENERAL_LOG_FILE', default='django_general.log'),  # Path from .env
            'formatter': 'verbose',
        },
    },
    'loggers': {
        'django': {
            'handlers': ['console', 'error_file', 'general_file'],  # Handlers for this logger
            'level': config('DJANGO_LOG_LEVEL', default='INFO'),  # Overall logger level from .env
            'propagate': True,
        },
    },
}

DATABASES = {
    'default': config(
        'DEFAULT_DATABASE_URL',
        cast=db_url
    ),
}



LOGIN_URL = "/login/"


